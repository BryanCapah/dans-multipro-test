{"version":3,"sources":["hooks/summary.js","components/joblistcard/index.jsx","components/input/index.jsx","components/search/index.jsx","screens/summary/index.jsx"],"names":["useSummary","jobList","useSelector","getJobList","page","getPage","useState","description","location","full_time","param","setParam","getJobLists","useCallback","props","console","log","store","dispatch","getJobs","unwrap","then","catch","e","alert","message","search","searchJobs","useEffect","_","onChange","name","value","target","current","onClick","JobListCard","data","height","document","documentElement","clientHeight","className","style","maxHeight","overflow","map","idx","title","company","type","created_at","CInput","placeholder","Search","id","width","Summary","loading","fontSize","color"],"mappings":"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","file":"static/js/5.d30eccf3.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { getJobs, searchJobs } from \"../apis/summary\"\nimport { getJobList, getPage } from \"../store/reducers/job\"\nimport store from '../store/store'\n\nexport const useSummary = () => {\n    const jobList = useSelector(getJobList)\n    const page = useSelector(getPage)\n\n    const [param, setParam] = useState({\n        description: '',\n        location: '',\n        full_time: false,\n        page: 0\n    })\n\n    const getJobLists = useCallback((props) => {\n        console.log(props);\n        store.dispatch(getJobs({\n            description: '',\n            location: '',\n            full_time: false,\n            page: page + 1\n        }))\n            .unwrap()\n            .then()\n            .catch(e => alert(e.message))\n    },\n        [param, page])\n\n    const search = useCallback((props) => {\n        const { description, location, full_time, page } = param\n        store.dispatch(searchJobs({\n            description,\n            location,\n            full_time,\n            page: page + 1\n        }))\n            .unwrap()\n            .then()\n            .catch(e => alert(e.message))\n    },\n        [param, page])\n\n    useEffect(_ => {\n        getJobLists()\n    }, [])\n\n    const onChange = useCallback((e, name) => {\n        const { value } = e.target\n        if (name === 'full_time') {\n            return setParam(current => ({ ...current, [name]: !param.full_time }))\n        }\n        else setParam(current => ({ ...current, [name]: value }))\n    }, [])\n\n    const onClick = () => {\n        search()\n    }\n\n\n    return { jobList, getJobLists, onChange, onClick }\n}","import { Table, Tr, Td, Tbody } from \"@chakra-ui/react\";\n\nimport { useSummary } from \"../../hooks/summary\"\n\nexport default function JobListCard({ data }) {\n    const height = document.documentElement.clientHeight - 270\n    const { jobList } = useSummary()\n    return (\n        <div className='mx-5 px-3 py-3 border-2 rounded-md' style={{ maxHeight: height, overflow: 'scroll' }}>\n            <Table className='w-full'>\n                <Tbody>\n                    {\n                        jobList?.map((data, idx) => {\n                            if (data) return (\n                                <Tr key={idx} className='cursor-pointer'>\n                                    <Td>\n                                        <div className='mb-3'>\n                                            <div className='text-blue-500'>{data?.title}</div>\n                                            <div className='text-left '>\n                                                <span className='text-gray-300'>{`${data?.company} - `}</span>\n                                                <span className='text-green-500'>{data?.type}</span>\n                                            </div>\n                                        </div>\n                                    </Td>\n                                    <Td>\n                                        <div>\n                                            <div className='text-gray-500'>{data?.location}</div>\n                                            <div className='text-gray-300'>{data?.created_at}</div>\n                                        </div>\n                                    </Td>\n                                </Tr>\n                            )\n                        })\n                    }\n                </Tbody>\n            </Table>\n        </div>\n    )\n}","import { Input } from \"@chakra-ui/input\";\nexport default function CInput({ title, placeholder, onChange }) {\n    return (\n        <div className='text-left md:mr-5 w-full'>\n            <div className={`font-bold mb-1 ${!title && 'hidden'}`}>{title}</div>\n            <Input\n                className='border-2 px-3 py-1 rounded-md w-full md:mb-0 mb-3'\n                onChange={onChange}\n                placeholder={placeholder} />\n        </div>\n    )\n}","import { Button } from \"@chakra-ui/button\";\nimport { Checkbox } from \"@chakra-ui/checkbox\";\nimport Input from \"../input\";\n\nexport default function Search({ onChange, onClick }) {\n    return (\n        <div className='md:flex w-full p-5'>\n            <Input id='description' title='Job Description' onChange={(e) => onChange(e, 'description')} placeholder='Filter by title, benefits, companies, expertise' />\n            <Input id='location' title='Location' onChange={(e) => onChange(e, 'location')} placeholder='Filter by city, state, zip or country' />\n            <div className='items-end flex justify-center md:mr-5'>\n                <div className='flex items-center'>\n                    <Checkbox id='full_time' onChange={(e) => onChange(e, 'full_time')} style={{ height: 35, width: 35 }} className='border-2 rounded-md md:mr-2' />\n                    <span className='whitespace-nowrap'>Fulltime Only</span>\n                </div>\n            </div>\n            <div className='flex-col flex justify-end'>\n                <Button onClick={onClick} className='bg-gray-500 text-white px-10 py-2 w-1/6 rounded-md'>Search</Button>\n            </div>\n        </div>\n    )\n}","import { Button } from \"@chakra-ui/button\";\nimport JobListCard from \"../../components/joblistcard\";\nimport Search from \"../../components/search\"\nimport { useSummary } from \"../../hooks/summary\";\n\nexport default function Summary() {\n    const { getJobLists, loading, onChange, onClick } = useSummary()\n    if (loading) return <div>Loading</div>\n    return (\n        <div className='text-left'>\n            <div className='bg-blue-500 w-full text-left px-5 py-3' style={{ fontSize: '2rem' }}>\n                <span className='font-bold' style={{ color: 'white' }}>GitHub</span>\n                <span style={{ color: 'white' }}>{` Job`}</span>\n            </div>\n            <Search onChange={onChange} onClick={onClick} />\n            <div className='font-bold mx-5' style={{ fontSize: '1.5rem' }}>Job List</div>\n            <JobListCard />\n            <div className='w-full mt-3 px-5'>\n                <Button\n                    onClick={() => getJobLists()}\n                    style={{ width: '100%' }}\n                    className='rounded-md bg-blue-500 text-white py-1 px-5'\n                >Get more job </Button>\n            </div>\n        </div>\n    )\n}"],"sourceRoot":""}