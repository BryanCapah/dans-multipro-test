{"version":3,"sources":["store/reducers/login.js","apis/summary.js","store/store.js","store/reducers/job.js","screens/index.jsx","screens/login/index.jsx","hooks/login.js","App.js","reportWebVitals.js","index.js"],"names":["login","createSlice","name","initialState","username","password","reducers","setUsername","state","action","payload","e","console","log","setPassword","getUsername","getPassword","actions","jobs","a","description","location","full_time","page","axios","get","data","getJobs","createAsyncThunk","searchJobs","configureStore","reducer","job","list","loading","extraReducers","pending","fulfilled","rejected","concat","getJobList","getPage","Screens","Loading","Summary","lazy","_","Detail","useSelector","useCallback","to","validate","fallback","exact","path","element","Login","dispatch","useDispatch","useState","required","setrequired","navigation","useNavigate","requiredColor","loginHandler","useLogin","className","style","fontSize","placeholder","onChange","target","value","onClick","App","height","document","documentElement","clientHeight","minHeight","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.13ac670f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getJobList } from \"../../apis/summary\";\n\nconst initialState = {\n    username: '',\n    password: ''\n}\n\nconst login = createSlice({\n    name: 'login',\n    initialState,\n    reducers: {\n        setUsername(state, action) {\n            try {\n                state.username = action.payload\n            }\n            catch (e) {\n                console.log(e);\n            }\n        },\n        setPassword(state, action) {\n            try {\n                state.password = action.payload\n            }\n            catch (e) {\n                console.log(e);\n            }\n        }\n    }\n})\n\n//getter\nexport const getUsername = state => state.login.username\nexport const getPassword = state => state.login.password\n\n//setter\nexport const { setUsername, setPassword } = login.actions\n\nexport default login.reducer","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\n\nconst jobs = async ({ description = '', location = '', full_time = false, page = 1 }) => {\n\n    const data = await axios.get(`http://dev3.dansmultipro.co.id/api/recruitment/positions.json?description=${description}&location=${location}&page=${page}&full_time=${full_time}`)\n    return data?.data\n\n}\n\nexport const getJobs = createAsyncThunk('job/getJobs', jobs)\nexport const searchJobs = createAsyncThunk('job/searchJobs', jobs)","import { configureStore } from '@reduxjs/toolkit'\nimport login from './reducers/login'\nimport job from './reducers/job'\n\nexport default configureStore({\n    reducer: {\n        login,\n        job,\n    },\n})\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getJobs, searchJobs } from \"../../apis/summary\";\n\n\nconst initialState = {\n    list: [],\n    loading: false,\n    page: 0\n}\n\nconst job = createSlice({\n    name: 'job',\n    initialState,\n    extraReducers: {\n        [searchJobs.pending]: (state) => {\n            state.loading = true\n        },\n        [searchJobs.fulfilled]: (state, { payload }) => {\n            state.page = state.page + 1\n            state.loading = false\n            state.list = payload\n        },\n        [searchJobs.rejected]: (state) => {\n            state.loading = false\n        },\n\n        [getJobs.pending]: (state) => {\n            state.loading = true\n        },\n        [getJobs.fulfilled]: (state, { payload }) => {\n            state.page = state.page + 1\n            state.loading = false\n            state.list = state.list.concat(payload)\n        },\n        [getJobs.rejected]: (state) => {\n            state.loading = false\n        },\n\n\n    }\n})\n\n//getter\nexport const getJobList = state => state.job.list\nexport const getPage = state => state.job.page\nexport const getLoading = state => state.job.loading\n\nexport default job.reducer","import { lazy, Suspense, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Routes, Navigate } from 'react-router-dom'\nimport { getUsername } from \"../store/reducers/login\";\n\n\nexport default function Screens() {\n    const Loading = () => <div></div>\n    const Summary = lazy(_ => import('./summary'))\n    const Detail = lazy(_ => import('./detail'))\n    const username = useSelector(getUsername)\n    const validate = useCallback(() => {\n        if (username !== 'brian') return <Navigate to={'/login'} />\n    }, [username])\n    validate()\n    return (\n        <div>\n            <Suspense fallback={<Loading />}>\n                <Routes>\n                    <Route\n                        exact\n                        path='/summary'\n                        name='Summary'\n                        element={<Summary />}\n                    />\n                    <Route\n                        exact\n                        path='/:id'\n                        name='Detail'\n                        element={<Detail />}\n                    />\n                </Routes>\n            </Suspense>\n        </div>\n    )\n}","import { Button } from \"@chakra-ui/button\";\nimport { Input } from \"@chakra-ui/input\";\nimport { useDispatch } from \"react-redux\";\nimport { useLogin } from \"../../hooks/login\";\n\nexport default function Login() {\n    const dispatch = useDispatch()\n    const {\n        requiredColor,\n        loginHandler,\n        setUsername,\n        setPassword\n    } = useLogin()\n\n    return <div className='flex justify-center items-center h-full w-full flex-col'>\n        <div className='font-bold' style={{ fontSize: '2rem' }}>Login</div>\n        <br />\n        <br />\n        <div className='flex flex-col '>\n            <Input\n                placeholder='Input brian'\n                className={`mb-3 border-2 rounded-md py-1 px-5 ${requiredColor}`}\n                onChange={(e) => dispatch(setUsername(e.target.value))} />\n            <Input\n                placeholder='Input brian'\n                className={`mb-3 border-2 rounded-md py-1 px-5 ${requiredColor}`}\n                onChange={(e) => dispatch(setPassword(e.target.value))} />\n            <Button\n                className='rounded-md bg-green-300 py-1 px-5'\n                onClick={loginHandler} >Login </Button>\n        </div>\n    </div>\n}","import { useCallback, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { getUsername, setUsername, setPassword, getPassword } from \"../store/reducers/login\";\n\n\nexport const useLogin = () => {\n    const [required, setrequired] = useState()\n    const username = useSelector(getUsername)\n    const password = useSelector(getPassword)\n    const navigation = useNavigate()\n\n    const loginHandler = useCallback(() => {\n        const usernameIsMatched = username === 'brian'\n        const passwordIsMatched = password === 'brian'\n        if (usernameIsMatched && passwordIsMatched) navigation('/summary')\n        else setrequired(true)\n    }, [username, password])\n\n    const requiredColor = required && 'border-red-500'\n\n    return {\n        requiredColor,\n        loginHandler,\n        setUsername,\n        setPassword\n    }\n}","\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom'\nimport Screen from './screens'\nimport './App.css';\nimport Login from './screens/login';\n\nfunction App() {\n  const height = document.documentElement.clientHeight\n  return (\n    <div className=\"App\" style={{ height, minHeight: height }} >\n      <Router>\n        <Routes>\n          <Route\n            path='/login'\n            name='Login'\n            element={<Login />}\n          />\n          <Route\n            path='/'\n            name='Login'\n            element={<Navigate replace to='/login' />}\n          />\n        </Routes>\n        <Screen />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}